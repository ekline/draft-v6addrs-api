



Internet Engineering Task Force                                 E. Kline
Internet-Draft                                        Google Japan, G.K.
Intended status: Experimental                           October 29, 2017
Expires: May 2, 2018


                      IPv6 Multiple Addresses API
                    draft-kline-6man-v6addrs-api-00

Abstract

   RFC 7934 [RFC7934] recommends that general-purpose hosts be given
   multiple addresses for current and future application needs.  This
   document describes the requirements for an API by which applications
   can request multiple addresses and the requirements for host
   operating systems supporting such an API.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 2, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Kline                      Expires May 2, 2018                  [Page 1]

Internet-Draft               IPv6 Addrs API                 October 2017


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   2
   2.  Motivating Use Cases  . . . . . . . . . . . . . . . . . . . .   2
     2.1.  Ephemeral Addresses . . . . . . . . . . . . . . . . . . .   2
     2.2.  Exclusive-use Addresses . . . . . . . . . . . . . . . . .   3
   3.  Implementation Requirements . . . . . . . . . . . . . . . . .   3
     3.1.  Meta-requirements . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Requirements for the API  . . . . . . . . . . . . . . . .   4
     3.3.  Requirements for Supporting Operating Systems . . . . . .   4
   4.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .   4
   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   5
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   5
   Appendix A.  Additional Stuff . . . . . . . . . . . . . . . . . .   5
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   6

1.  Introduction

   RFC 7934 [RFC7934] recommends that general-purpose hosts be given
   multiple addresses for current and future application needs.  This
   document describes the requirements for an API by which applications
   can request multiple addresses and the requirements for host
   operating systems supporting such an API.

   XXX: expound a bit more?

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Motivating Use Cases

2.1.  Ephemeral Addresses

   Applications may want to obtain an address for some ephemeral use
   case.  These may be desirable for privacy purposes, injecting some
   measure of randomness into communications, or for tracking
   application activity on a per-application basis.  One hypothetical
   example might be a DNS recursive resolver that spreads queries across
   multiple addresses in order to increase its resistance to cache-




Kline                      Expires May 2, 2018                  [Page 2]

Internet-Draft               IPv6 Addrs API                 October 2017


   poisoning attacks in situation where DNS cookies [RFC7873] may not be
   reliably available.

   In these cases, specific port reservations are not required.  This
   may be because some explicit bind() will take place upon notification
   of the availability of a new address, or because a listening socket
   is bound to a wildcard address and the operating system is expected
   to deliver traffic at the listening port on the new address to the
   application.

   XXX: the cleanup from this, where other applications may have used an
   address and it cannot easily be freed may indicate that this use case
   is not really worth the effort.  Alternatively, there might be some
   policy limiting the number of simultaneous "shared" addresses.

2.2.  Exclusive-use Addresses

   Some applications may need "exclusive-use addresses".  In these use
   cases, the application wants to control both all traffic originating
   from and received at this address.  Such traffic may be originated
   and received by the application itself, e.g. a 464xlat CLAT daemon.
   Alternatively, the application may wish to delegate the flow of
   traffic to another application, likely in coordination with other
   operating system functions, e.g. an application controlling a virtual
   machine (VM) for which it is attempting to arrange minimal IPv6
   network connectivity.

3.  Implementation Requirements

3.1.  Meta-requirements

   IPv6 addressing can change dynamically in response to changes in the
   network (i.e. due to events other than administrative action on the
   host itself).  If IPv6 optimistic addresses ([RFC4429]) are used, an
   address might fail Duplicate Address Detection and need to be
   withdrawn from use.  Similarly, IPv6 prefixes from which addresses
   are formed might become deprecated via Router Advertisements (and may
   also transition from deprecated back to valid) or they may expire
   when a delegated prefix expires (e.g. without a successful DHCPv6
   renewal).

   Similarly, multiple IPv6 prefixes may be available for creating
   addresses via this API.  There may also be multiple network
   interfaces with advertised prefixes from which an address might be
   formed.

   It is a meta-requirement for this API that these complexities MUST be
   explicitly supported.  Failure to do so would mean the spread of



Kline                      Expires May 2, 2018                  [Page 3]

Internet-Draft               IPv6 Addrs API                 October 2017


   inflexible APIs yielding brittle applications, unable to adapt
   sensibly to changing network conditions.

3.2.  Requirements for the API

   request (type? timeout? callback_mechanism?) yield result or error
   result might be a token to associate future asynchronous
   notifications TBD: request specific address? specific IID? release
   (request::result_type) yield success or error callback_mechanism must
   notify of address less (deprecation, DAD failures if optimistic addrs
   in use) must notify of timeout in creating a usable address

3.3.  Requirements for Supporting Operating Systems

   Supporting host operating systems SHOULD support an asynchronous API.
   The dynamic nature of IPv6 means, among other things, that the prefix
   from which an address was formed might become deprecated at any time
   (and similarly could theoretically transition from deprecated back to
   valid).  Applications MUST be able to receive notifications of such
   changes.

   The callback and asynchronous notification mechanisms SHOULD work
   well with the operating systems' popular asynchronous event loop
   APIs.

   At process exit: release and remove all exclusive-use addresses and
   mark shared-use addresses as deprecated (unless they have been
   explicitly handed out to another application via this API).

   Shared-use addresses may be reused (given back to application in
   response to another request) if no new addresses may be formed.
   Alternatively, an error condition may be signaled.

4.  Open Issues

   This section will be replaced by a summary of discussion of issues
   rejected here.  Decisions adopted will necessarily be incorporated
   elsewhere in this document.

   Should all requests be exclusive, even if not required?  This is
   likely to be simpler to implement and manage.  Might make it harder
   to share address use among multiple apps if that were desired.

   How to specify requests when multiple prefixes could theoretically be
   used to satisfy the request?  Avoid giving the same IID on multiple
   prefixes, for sure.  But otherwise?





Kline                      Expires May 2, 2018                  [Page 4]

Internet-Draft               IPv6 Addrs API                 October 2017


5.  Acknowledgements

6.  IANA Considerations

   This memo includes no request to IANA.

7.  Security Considerations

   All drafts are required to have a security considerations section.
   See RFC 3552 [RFC3552] for a guide.

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

8.2.  Informative References

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003, <https://www.rfc-
              editor.org/info/rfc3552>.

   [RFC4429]  Moore, N., "Optimistic Duplicate Address Detection (DAD)
              for IPv6", RFC 4429, DOI 10.17487/RFC4429, April 2006,
              <https://www.rfc-editor.org/info/rfc4429>.

   [RFC7873]  Eastlake 3rd, D. and M. Andrews, "Domain Name System (DNS)
              Cookies", RFC 7873, DOI 10.17487/RFC7873, May 2016,
              <https://www.rfc-editor.org/info/rfc7873>.

   [RFC7934]  Colitti, L., Cerf, V., Cheshire, S., and D. Schinazi,
              "Host Address Availability Recommendations", BCP 204,
              RFC 7934, DOI 10.17487/RFC7934, July 2016,
              <https://www.rfc-editor.org/info/rfc7934>.

Appendix A.  Additional Stuff

   This becomes an Appendix.








Kline                      Expires May 2, 2018                  [Page 5]

Internet-Draft               IPv6 Addrs API                 October 2017


Author's Address

   Erik Kline
   Google Japan, G.K.
   6-10-1 Roppongi
   Minato, Tokyo  106-6144
   JP

   Phone: +81 03 6384 9000
   Email: ek@google.com









































Kline                      Expires May 2, 2018                  [Page 6]
