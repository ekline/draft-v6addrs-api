<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM
         "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3552 SYSTEM
         "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC7934 SYSTEM
         "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7934.xml">

]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="exp"
     docName="draft-kline-6man-v6addrs-api-00"
     ipr="trust200902">

    <front>
        <title abbrev="IPv6 Addrs API">
IPv6 Multiple Addresses API
        </title>

        <author fullname="Erik Kline" initials="E." surname="Kline">
            <organization>Google Japan, G.K.</organization>

            <address>
                <postal>
                    <street>6-10-1 Roppongi</street>
                    <city>Minato</city>
                    <region>Tokyo</region>
                    <code>106-6144</code>
                    <country>JP</country>
                </postal>

                <phone>+81 03 6384 9000</phone>

                <email>ek@google.com</email>
            </address>
        </author>

        <date year="2017"/>

        <area>General</area>
        <workgroup>Internet Engineering Task Force</workgroup>

        <keyword>IPv6</keyword>
        <keyword>addresses</keyword>
        <keyword>API</keyword>

        <abstract>
            <t>
IPv6, multiple addrs, API
            </t>
        </abstract>
    </front>

    <middle>
        <section title="Introduction">
            <t>
            </t>

            <section title="Requirements Language">
                <t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
                </t>
            </section>
        </section>

<!--
    <section anchor="simple_list" title="Simple List">
      <t>List styles: 'empty', 'symbols', 'letters', 'numbers', 'hanging',
      'format'.</t>

      <t><list style="symbols">
          <t>First bullet</t>

          <t>Second bullet</t>
        </list> You can write text here as well.</t>
    </section>

    <section title="Figures">
      <t>Figures should not exceed 69 characters wide to allow for the indent
      of sections.</t>

      <figure align="center" anchor="xml_happy">
        <preamble>Preamble text - can be omitted or empty.</preamble>

        <artwork align="left"><![CDATA[
._______________________.
| Use XML, be Happy :-) |
|_______________________|
            ]]></artwork>

        <postamble>Cross-references allowed in pre- and postamble.</postamble>
      </figure>

      <t>The CDATA means you don't need to escape meta-characters (especially
      &lt;&nbsp;(&amp;lt;) and &amp;&nbsp;(&amp;amp;)) but is not essential.
      Figures may also have a title attribute but it won't be displayed unless
      there is also an anchor. White space, both horizontal and vertical, is
      significant in figures even if you don't use CDATA.</t>
    </section>
-->

<!--
This PI places the pagebreak correctly (before the section title) in the text output.
<?rfc needLines="8" ?>
-->

<!--
    <section title="Subsections and Tables">
      <section title="A Subsection">
        <t>By default 3 levels of nesting show in table of contents but that
        can be adjusted with the value of the "tocdepth" processing
        instruction.</t>
      </section>

      <section title="Tables">
        <t>.. are very similar to figures:</t>

        <texttable anchor="table_example" title="A Very Simple Table">
          <preamble>Tables use ttcol to define column headers and widths.
          Every cell then has a "c" element for its content.</preamble>

          <ttcol align="center">ttcol #1</ttcol>

          <ttcol align="center">ttcol #2</ttcol>

          <c>c #1</c>

          <c>c #2</c>

          <c>c #3</c>

          <c>c #4</c>

          <c>c #5</c>

          <c>c #6</c>

          <postamble>which is a very simple example.</postamble>
        </texttable>
      </section>
    </section>

    <section anchor="nested_lists" title="More about Lists">
      <t>Lists with 'hanging labels': the list item is indented the amount of
      the hangIndent: <list hangIndent="8" style="hanging">
          <t hangText="short">With a label shorter than the hangIndent.</t>

          <t hangText="fantastically long label">With a label longer than the
          hangIndent.</t>

          <t hangText="vspace_trick"><vspace blankLines="0" />Forces the new
          item to start on a new line.</t>
        </list></t>
-->

<!--
It would be nice to see the next piece (12 lines) all on one page.
<?rfc needLines="12" ?>
-->

<!--
      <t>Simulating more than one paragraph in a list item using
      &lt;vspace&gt;: <list style="letters">
          <t>First, a short item.</t>

          <t>Second, a longer list item.<vspace blankLines="1" /> And
          something that looks like a separate pararaph..</t>
        </list></t>

      <t>Simple indented paragraph using the "empty" style: <list
          hangIndent="10" style="empty">
          <t>The quick, brown fox jumped over the lazy dog and lived to fool
          many another hunter in the great wood in the west.</t>
        </list></t>

      <section title="Numbering Lists across Lists and Sections">
        <t>Numbering items continuously although they are in separate
        &lt;list&gt; elements, maybe in separate sections using the "format"
        style and a "counter" variable.</t>

        <t>First list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#1</t>

            <t>#2</t>

            <t>#3</t>
          </list> Specify the indent explicitly so that all the items line up
        nicely.</t>

        <t>Second list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#4</t>

            <t>#5</t>

            <t>#6</t>
          </list></t>
      </section>

      <section title="Where the List Numbering Continues">
        <t>List continues here.</t>

        <t>Third list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#7</t>

            <t>#8</t>

            <t>#9</t>

            <t>#10</t>
          </list> The end of the list.</t>
      </section>
    </section>

    <section anchor="codeExample"
             title="Example of Code or MIB Module To Be Extracted">
      <figure>
        <preamble>The &lt;artwork&gt; element has a number of extra attributes
        that can be used to substitute a more aesthetically pleasing rendition
        into HTML output while continuing to use the ASCII art version in the
        text and nroff outputs (see the xml2rfc README for details). It also
        has a "type" attribute. This is currently ignored except in the case
        'type="abnf"'. In this case the "artwork" is expected to contain a
        piece of valid Augmented Backus-Naur Format (ABNF) grammar. This will
        be syntax checked by xml2rfc and any errors will cause a fatal error
        if the "strict" processing instruction is set to "yes". The ABNF will
        also be colorized in HTML output to highlight the syntactic
        components. Checking of additional "types" may be provided in future
        versions of xml2rfc.</preamble>

        <artwork><![CDATA[

/**** an example C program */

#include <stdio.h>

void
main(int argc, char *argv[])
{
    int i;

    printf("program arguments are:\n");
    for (i = 0; i < argc; i++) {
        printf("%d: \"%s\"\n", i, argv[i]);
    }

    exit(0);
} /* main */

/* end of file */

            ]]></artwork>
      </figure>
    </section>
-->

        <section anchor="Acknowledgements" title="Acknowledgements">
        </section>

        <section anchor="IANA" title="IANA Considerations">
            <t>This memo includes no request to IANA.</t>
        </section>

        <section anchor="Security" title="Security Considerations">
            <t>
All drafts are required to have a security considerations section.
See <xref target="RFC3552">RFC 3552</xref> for a guide.
            </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            &RFC2119;

<!--
            <reference anchor="min_ref">
                <front>
                    <title>Minimal Reference</title>

                    <author initials="authInitials" surname="authSurName">
                        <organization></organization>
                    </author>

                    <date year="2006" />
                </front>
            </reference>
-->
        </references>

        <references title="Informative References">
            &RFC3552;
            &RFC7934;

<!--
            <reference anchor="DOMINATION"
                       target="http://www.example.com/dominator.html">
                <front>
                    <title>Ultimate Plan for Taking Over the World</title>

                    <author>
                        <organization>Mad Dominators, Inc.</organization>
                    </author>

                    <date year="1984" />
                </front>
            </reference>
-->
        </references>

        <section anchor="app-additional" title="Additional Stuff">
            <t>This becomes an Appendix.</t>
        </section>
    </back>
</rfc>
